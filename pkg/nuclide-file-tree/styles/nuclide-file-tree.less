@import "ui-variables";

.nuclide-file-tree.tree-view:before {
  /*
   * Override `fixed` position from `.tree-view:before` so the focus bar is relative to its
   * container rather than the window. This enables, for example, a tool bar to be left of the tree
   * view and the focus bar to stay within the tree view.
   */
  position: absolute;
}

.list-tree.has-collapsable-children .list-nested-item > .list-item.loading:before {
  content: "\f087"; // 'sync' icon, spinning arrows
}

/*
 * Styles below taken from Atom's [tree-view][0] to ensure nuclide-file-tree looks exactly the same.
 *
 * [0] https://github.com/atom/tree-view
 */
.tree-view {
  flex-grow: 1;
  flex-shrink: 0;
  min-width: -webkit-min-content;
  min-height: -webkit-min-content; // Switched from tree-view's `100%` to fill height of scroller.
  padding-left: @component-icon-padding;
  padding-right: @component-padding;
  position: relative;
  width: 100%;

  .header {
    position: relative;
  }

  .list-tree {
    position: static;
  }

  .entry {
    // This fixes https://github.com/atom/tree-view/issues/110, see that issue for more details
    &:before {
      content: '';
      position: absolute;
    }
  }
}

.nuclide-file-tree-filter {
  &.show {
    opacity: 0.8;
  }
  &.not-found {
    font-weight: bold;
    color: #f26769;
  }
  position: absolute;
  top: 10px;
  left: 10px;
  z-index: 1;
  background: rgb(40, 44, 52);
  padding: 5px 10px;
  border: 1px solid #ccc;
  opacity: 0;
  transition: opacity 0.5s;
  display: none;
}

.nuclide-file-tree-entry-highlight {
  background: #528bff;
  border-radius: 2px;
  color: rgb(40, 44, 52);
}

.nuclide-file-tree-toolbar {
  position: absolute;
  right: 30px;
  top: 10px;
  z-index: 1;
}

.nuclide-file-tree-toolbar-container {
  display: flex;
  /*
   * Ensure this container is at least the height of its contents, same as `.tree-view`, so this
   * element is always visible when its parent scroller is scrolled and, subsequently, calls to
   * this element's `focus` method do not affect the scroller's scroll position.
   */
  min-height: -webkit-min-content;
  width: 100%;
}

.nuclide-file-tree-toolbar-fader {
  opacity: 0;
  transition: opacity 0.35s ease-in-out;
}

.nuclide-file-tree-toolbar-container:hover .nuclide-file-tree-toolbar-fader {
  opacity: 1;
}

.nuclide-file-tree .list-item .nuclide-ui-checkbox-label {
  margin-right: 5px;
}

.nuclide-file-tree-softened {
  opacity: 0.4;
}

.nuclide-file-tree-toolbar-icon:before,
.nuclide-file-tree-toolbar-icon {
  margin-right: 0;
}

.nuclide-file-tree-working-set-name-missing {
  visibility: hidden;
}

.nuclide-file-tree-toolbar-icon:hover +
.nuclide-file-tree-working-set-name-missing {
  visibility: visible;
}

// matches the margin in .inline-block-tight
.nuclide-file-tree-connection-title {
  margin-left: @component-padding/2;
}
